//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UploadServiceTestApp.UploadServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UploadServiceReference.IUploadService")]
    public interface IUploadService {
        
        // CODEGEN: Generating message contract since the operation Upload is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadService/Upload", ReplyAction="http://tempuri.org/IUploadService/UploadResponse")]
        UploadServiceTestApp.UploadServiceReference.UploadResponse Upload(UploadServiceTestApp.UploadServiceReference.UploadDetails request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadService/Upload", ReplyAction="http://tempuri.org/IUploadService/UploadResponse")]
        System.Threading.Tasks.Task<UploadServiceTestApp.UploadServiceReference.UploadResponse> UploadAsync(UploadServiceTestApp.UploadServiceReference.UploadDetails request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDetails", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadDetails {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream Data;
        
        public UploadDetails() {
        }
        
        public UploadDetails(string FileName, System.IO.Stream Data) {
            this.FileName = FileName;
            this.Data = Data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadResponse {
        
        public UploadResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUploadServiceChannel : UploadServiceTestApp.UploadServiceReference.IUploadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadServiceClient : System.ServiceModel.ClientBase<UploadServiceTestApp.UploadServiceReference.IUploadService>, UploadServiceTestApp.UploadServiceReference.IUploadService {
        
        public UploadServiceClient() {
        }
        
        public UploadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UploadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UploadServiceTestApp.UploadServiceReference.UploadResponse UploadServiceTestApp.UploadServiceReference.IUploadService.Upload(UploadServiceTestApp.UploadServiceReference.UploadDetails request) {
            return base.Channel.Upload(request);
        }
        
        public void Upload(string FileName, System.IO.Stream Data) {
            UploadServiceTestApp.UploadServiceReference.UploadDetails inValue = new UploadServiceTestApp.UploadServiceReference.UploadDetails();
            inValue.FileName = FileName;
            inValue.Data = Data;
            UploadServiceTestApp.UploadServiceReference.UploadResponse retVal = ((UploadServiceTestApp.UploadServiceReference.IUploadService)(this)).Upload(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<UploadServiceTestApp.UploadServiceReference.UploadResponse> UploadServiceTestApp.UploadServiceReference.IUploadService.UploadAsync(UploadServiceTestApp.UploadServiceReference.UploadDetails request) {
            return base.Channel.UploadAsync(request);
        }
        
        public System.Threading.Tasks.Task<UploadServiceTestApp.UploadServiceReference.UploadResponse> UploadAsync(string FileName, System.IO.Stream Data) {
            UploadServiceTestApp.UploadServiceReference.UploadDetails inValue = new UploadServiceTestApp.UploadServiceReference.UploadDetails();
            inValue.FileName = FileName;
            inValue.Data = Data;
            return ((UploadServiceTestApp.UploadServiceReference.IUploadService)(this)).UploadAsync(inValue);
        }
    }
}
