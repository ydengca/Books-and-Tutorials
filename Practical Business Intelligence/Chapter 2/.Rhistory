y[i] <- 0.6*y[i-1] + e[i]
#Exercises 8.11.5B
summary(y)
str(y)
y_ts<-ts(y)
plot(y_ts, ylab="y-axis")
#Exercises 8.11.5A
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
#Exercises 8.11.5B
summary(y)
str(y)
y_ts<-ts(y)
plot(y_ts, ylab="y-axis")
#Exercises 8.11.5A
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
#Exercises 8.11.5B
summary(y)
str(y)
y_ts<-ts(y)
plot(y_ts, ylab="y-axis")
#Exercises 8.11.5A
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
#Exercises 8.11.5B
summary(y)
str(y)
y_ts<-ts(y)
plot(y_ts, ylab="y-axis")
#Exercises 8.11.5A
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
#Exercises 8.11.5B
summary(y)
str(y)
y_ts<-ts(y)
plot(y_ts, ylab="y-axis")
#Exercises 8.11.5A
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
#Exercises 8.11.5B
summary(y)
str(y)
y_ts<-ts(y)
plot(y_ts, ylab="y-axis")
#Exercises 8.11.5A
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
#Exercises 8.11.5B
summary(y)
str(y)
y_ts<-ts(y)
plot(y_ts, ylab="y-axis")
#Exercises 8.11.5A
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
#Exercises 8.11.5B
summary(y)
str(y)
y_ts<-ts(y)
plot(y_ts, ylab="y-axis")
#Exercises 8.11.5A
y <- ts(numeric(100))
e <- rnorm(100)
for(i in 2:100)
y[i] <- 0.6*y[i-1] + e[i]
#Exercises 8.11.5B
summary(y)
str(y)
y_ts<-ts(y)
plot(y_ts, ylab="y-axis")
plot(y_ts, ylab="y-axis", main = "An AR(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y_ts
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.6*e2[i-1]
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2_ts
y2_ts
y2_ts
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.6*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.99999*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.01*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.00001*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.00001*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.00001*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.00001*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.99999*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.001*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
y2 <- ts(numeric(100))
e2 <- rnorm(100)
for(i in 2:100)
y2[i] <- e2[i]+ 0.9999*e2[i-1]
#Exercises 8.11.5D
y2_ts<-ts(y2)
plot(y2_ts, ylab="y-axis", main = "An MA(1) model with ϕ1=0.6 and σ2=1", col ="blue")
x<- ts(numeric(100))
e3<-rnorm(100)
plot(e3)
for(i in 2:100)
histogram(e3)
hist(e3)
x<- ts(numeric(100))
e3<-rnorm(100)
hist(e3)
for( i in 2:100)
x[i]<-e3[i]+0.6*x[i-1]+0.6*e3[i-1]
x2<-ts(numeric(100))
e4<-rnorm(100)
for( i in 2:100)
x2<-ts(numeric(100))
e4<-rnorm(100)
for( i in 2:100)
x2[i]<-e4[i]-0.8*x2[i-1]+0.3*x2[i-2]
x2<-ts(numeric(100))
e4<-rnorm(100)
for( i in 2:100)
x2[i]<-e4[i]-0.8*x2[i-1]+0.3*x2[i-2]
x2<-ts(numeric(100))
e4<-rnorm(100)
for( i in 2:100)
x2[i]<-e4[i]-0.8*x2[i-1]+0.3*x2[i-1]
ar.sim<-arima.sim(model=list(ar=c(-0.8,0.6)),n=100)
ar.sim<-arima.sim(model=list(ar=c(.9,-.2)),n=100)
ar.sim<-arima.sim(model=list(ar=c(-.8,.6)),n=100)
ar.sim<-arima.sim(model=list(ar=c(.6,-.8)),n=100)
eps=rnorm(10^3)
x=rnorm(10^3)
a=-0.8;b=0.6
x[2]=a*x[1]+eps[2]
for (t in 3:10^3)
x[t]=a*x[t-1]+b*x[t-2]+eps[t]
x<- ts(numeric(100))
e3<-rnorm(100)
hist(e3)
for( i in 2:100)
x[i]<-e3[i]+0.6*x[i-1]+0.6*e3[i-1]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "An ARMA(1,1) model with ϕ1 = 0.6 and θ1=0.6", col ="blue")
eps<-rnorm(100)
x<-rnorm(100)
a<-0.8;b<-0.6
x[2]<-a*x[1]+eps[2]
for (t in 3:10^3)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
eps<-rnorm(100)
x<-rnorm(100)
a<-0.8;b<-0.6
x[2]<-a*x[1]+eps[2]
for (t in 3:100)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
eps<-rnorm(100)
x<-rnorm(100)
a<-0.8;b<-0.6
x[2]<-a*x[1]+eps[2]
for (t in 3:100)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
eps<-rnorm(100)
x<-rnorm(100)
a<--0.8;b<-0.3
x[2]<-a*x[1]+eps[2]
for (t in 3:100)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
eps<-rnorm(100)
x<-rnorm(100)
a<--0.8;b<-0.3
x[2]<-a*x[1]+eps[2]
for (t in 3:100)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
eps<-rnorm(100)
x<-rnorm(100)
a<--0.8;b<-0.3
x[2]<-a*x[1]+eps[2]
for (t in 3:100)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
eps<-rnorm(100)
x<-rnorm(100)
a<--0.8;b<-0.3
x[2]<-a*x[1]+eps[2]
for (t in 3:100)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
eps<-rnorm(100)
x<-rnorm(100)
a<--0.8;b<-0.3
x[2]<-a*x[1]+eps[2]
for (t in 3:100)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
eps<-rnorm(100)
x<-rnorm(100)
a<--0.8;b<-0.3
x[2]<-a*x[1]+eps[2]
for (t in 3:100)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
eps<-rnorm(100)
x<-rnorm(100)
a<--0.8;b<-0.3
x[2]<-a*x[1]+eps[2]
for (t in 3:100)
x[t]<-a*x[t-1]+b*x[t-2]+eps[t]
x_ts<-ts(x)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
x4<-ts(numeric(100))
e4<-rnorm(100)
a<--0.8;
b<-0.3
x4[2]<-a*x4[1]+e4[2]
for (i in 3:100)
x4[i]<-a*x4[i-1]+b*x4[i-2]+e4[i]
x_ts<-ts(x4)
plot(x_ts, ylab="y-axis", main = "AR(2) model with ϕ1=−0.8 and ϕ2=0.3", col ="blue")
install.packages("fma")
data(package="fma")
require(fma)
library(fma)
head(wmurders)
install.packages("ffp")
data(package="ffp")
require(ffp)
library(ffp)
head(wmurders)
install.packages("OIdata")
data(package="OIdata")
install.packages("ffp")
data(package="ffp")
install.packages("fpp")
data(package="fpp")
require(fpp)
library(fpp)
head(wmurders)
wmurders
plot(ts(wmurders))
plot(ts(wmurders), main="Women Murders by Time", ylab = "Women Murders", col = "purple")
decompose(ts(wmurders))
fit<-auto.arima(wmurders, seasonal = FALSE)
summary(fit)
plot(forecast(fit,h=10),include=80)
plot(forecast(fit,h=10),include=80000)
plot(forecast(fit,h=10))
auto.arima(residuals(fit))
residuals(fit)
summary(residuals(fit))
plot(residuals(fit))
plot(residuals(fit), main = "residuals of ARIMA(1,2,1) model for Women Murders", ylab = "residuals")
plot(forecast(fit,h=3))
summary(forecast(fit))
lines(forecast(fit)$lo)
plot(forecast(fit,h=3))
lines(forecast(fit))
lines(fit$residuals)
plot(forecast(fit,h=3))
lines(abline)
ARIMA121<-forecast(fit,h=3)
lines(ARIMA121$lower)
lines(ARIMA121$lower, col = "blue")
plot(ARIMA121)
lines(ARIMA121$lower, col = "blue")
ARIMA121$lower
peytonmanning <- read.delim(pipe(“pbpaste”))
peytonmanning <- read.delim(pipe("pbpaste"))
peytonmanning
install.packages("XML")
library(XML)
url <- "http://en.wikipedia.org/wiki/list_of_countries_by_population"
poptable<-readHTMLTable(url,which=1)
head(poptable)
url
url <- "http://en.wikipedia.org/wiki/List_of_countries_by_population"
poptable<-readHTMLTable(url,which=1)
url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
poptable<-readHTMLTable(url, which = 1)
head(poptable)
poptable<-readHTMLTable(doc=url, which = 1)
poptable<-readHTMLTable(url)
head(poptable)
head(poptable)
poptable<-readHTMLTable(url)
poptable
print(poptable)
library(XML)
theurl <- "http://en.wikipedia.org/wiki/Brazil_national_football_team"
tables <- readHTMLTable(theurl)
head(tables)
tables <- readHTMLTable(theurl)
library(RCurl)
library(XML)
# Download page using RCurl
# You may need to set proxy details, etc.,  in the call to getURL
theurl <- "http://en.wikipedia.org/wiki/Brazil_national_football_team"
webpage <- getURL(theurl)
head(webpage)
theurl <- 'http://en.wikipedia.org/wiki/Brazil_national_football_team'
webpage <- getURL(theurl)
head(webpage)
library(XML)
library(XML)
theurl <- "http://en.wikipedia.org/wiki/Brazil_national_football_team"
tables <- readHTMLTable(theurl)
url <-"https://en.wikipedia.org/wiki/Land_use_statistics_by_country"
getwd()
tabs <- getURL(url)
library(XML)
library(RCurl)
#url <- "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
url <-"https://en.wikipedia.org/wiki/Land_use_statistics_by_country"
getwd()
tabs <- getURL(url)
str(tabs)
tabs <- readHTMLTable(tabs, which = 1)
head(tabs)
str(tabs)
tabs
getwd()
write.csv(tabs, file = "Countries By Population.csv")
library(XML) #Loads the XML library into our code
library(RCurl) #Loads the RCurl library int our code
getwd() # Tells us what our current working directory is for R
setwd("C:/Users/asher/Desktop")
getwd() # confirm new working directory has been changed
get_URL <- getURL(url) # Leverages the RCurl library to bring the link back as a string
str(get_URL) #displays the structure of the variable, which in this case is the link to the website
getTable <- readHTMLTable(get_URL, which = 1)
head(getTable) #returns the first five rows of the table
url <-"https://github.com/asherif844/PracticalBusinessIntelligence/wiki/Table-1---Web-Scraping-Exercise"
get_URL <- getURL(url) # Leverages the RCurl library to bring the link back as a string
str(get_URL) #displays the structure of the variable, which in this case is the link to the website
getTable <- readHTMLTable(get_URL, which = 1)
head(getTable) #returns the first five rows of the table
write.csv(getTable, file = "Countries By Population.csv")
install.packages('XML', 'RCurl')
install.packages("XML", "RCurl")
install.packages("XML", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(data.table)
install.packages(data)
install.packages('data')
library(data.table)
install.packages('data.table')
library(data.table)
mydat <- fread('http://www.stats.ox.ac.uk/pub/datasets/csb/ch11b.dat')
head(mydat)
library(data.table)
mydat <- fread('http://chart.finance.yahoo.com/table.csv?s=CSV&a=6&b=15&c=2016&d=7&e=15&f=2016&g=d&ignore=.csv')
head(mydat)
install.packages('data.table')
library(data.table)
Microsoft_df <- fread('http://chart.finance.yahoo.com/table.csv?s=MSFT&a=6&b=17&c=2016&d=7&e=17&f=2016&g=d&ignore=.csv')
head(Microsoft_df)
install.packages("data.table")
Microsoft_df <- fread('http://chart.finance.yahoo.com/table.csv?s=MSFT&a=6&b=17&c=2016&d=7&e=17&f=2016&g=d&ignore=.csv')
library(data.table)
Microsoft_df <- fread('http://chart.finance.yahoo.com/table.csv?s=MSFT&a=6&b=17&c=2016&d=7&e=17&f=2016&g=d&ignore=.csv')
head(Microsoft_df)
attach(Microsoft_df)
Microsoft_df[order(`Adj Close`),]
Microsoft_df[order(Date),]
head(Microsoft_df)
Microsoft_df[order(-Date),]
head(Microsoft_df)
?sort()
Microsoft_df
New_DataFrame<-lm(`Adj Close`~Date)
StockRegression<-lm(`Adj Close`~Date)
New_DataFrame<-cbind(Microsoft_df, Fitted=fitted(StockRegression))
head(New_DataFrame)
New_DataFrame
StockRegression<-lm(`Adj Close`~Date, Microsoft_df)
New_DataFrame<-cbind(Microsoft_df, Fitted=fitted(StockRegression))
head(New_DataFrame)
StockRegression<-lm(Volume~Date, Microsoft_df)
New_DataFrame<-cbind(Microsoft_df, Fitted=fitted(StockRegression))
head(New_DataFrame)
plot(Volume~Date, Microsoft_df)
plot(Volume, Microsoft_df)
plot(Volume, data = Microsoft_df)
plot(Date~Volume, data = Microsoft_df)
Microsoft_df$Index<-seq.int(nrow(Microsoft_df))
head(New_DataFrame)
Microsoft_df$RowCount<-seq.int(nrow(Microsoft_df))
head(Microsoft_df)
Microsoft_df <- fread('http://chart.finance.yahoo.com/table.csv?s=MSFT&a=6&b=17&c=2016&d=7&e=17&f=2016&g=d&ignore=.csv')
head(Microsoft_df)
Microsoft_df$RowCount<-seq.int(nrow(Microsoft_df))
head(Microsoft_df)
StockRegression<-lm(Volume~RowCount, Microsoft_df)
New_DataFrame<-cbind(Microsoft_df, Fitted=fitted(StockRegression))
head(New_DataFrame)
StockRegression<-lm(`Adj Close`~RowCount, Microsoft_df)
New_DataFrame<-cbind(Microsoft_df, Fitted=fitted(StockRegression))
head(New_DataFrame)
Microsoft_df
library(data.table)
Microsoft_df <- fread('http://chart.finance.yahoo.com/table.csv?s=MSFT&a=6&b=17&c=2016&d=7&e=17&f=2016&g=d&ignore=.csv')
head(Microsoft_df)
install.packages('data.table')
install.packages("data.table")
library(data.table)
Microsoft_df <- fread('http://chart.finance.yahoo.com/table.csv?s=MSFT&a=6&b=17&c=2016&d=7&e=17&f=2016&g=d&ignore=.csv')
head(Microsoft_df)
Microsoft_df$RowCount<-seq.int(nrow(Microsoft_df))
StockRegression<-lm(`Adj Close`~RowCount, Microsoft_df)
Regression_df<-cbind(Microsoft_df, Fitted=fitted(StockRegression))
head(Regression_df)
library(XML) #Loads the XML library into our code
library(RCurl) #Loads the RCurl library int our code
getwd() # Tells us what our current working directory is for R
setwd("C:/Users/asher/Desktop")
setwd('/Users/asherif844/Dropbox/Packt/Practical Business Intelligence/Code/Ch2/')
getwd() # confirm new working directory has been changed
url <-"https://github.com/asherif844/PracticalBusinessIntelligence/wiki/AdventureWorks---Weekly-Data-by-Discount"
get_URL <- getURL(url) # Leverages the RCurl library to bring the link back as a string
str(get_URL) #displays the structure of the variable, which in this case is the link to the website
getTable <- readHTMLTable(get_URL, which = 1)
View(getTable)
url <-"https://github.com/asherif844/PracticalBusinessIntelligence/wiki/AdventureWorks---Detail-by-CountryCode"
get_URL <- getURL(url) # Leverages the RCurl library to bring the link back as a string
str(get_URL) #displays the structure of the variable, which in this case is the link to the website
getTable <- readHTMLTable(get_URL, which = 1)
View(getTable)
head(getTable) #returns the first five rows of the table
str(getTable) #displays the structure of the data frame of the tables
getTable$PercentBikeRides <- as.numeric(getTable$PercentBikeRides)
str(getTable) #displays the structure of the data frame of the tables
str_replace_all(getTable, "", " ")
str_replace_all(getTable$CountryRegionCode, "", " ")
getTable
write.csv(getTable, file = "CountryRegionsBike.csv")
